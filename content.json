{"meta":{"title":"小明的博客","subtitle":null,"description":null,"author":"小明","url":"https://codemonsterm.github.io","root":"/"},"pages":[{"title":"about","date":"2019-04-24T13:40:36.000Z","updated":"2019-04-25T07:31:28.739Z","comments":false,"path":"about/index.html","permalink":"https://codemonsterm.github.io/about/index.html","excerpt":"","text":"CodeMonsterM 与&nbsp; CodeMonsterM&nbsp; （ Ming ） 对话中... function bot_ui_ini() { var botui = new BotUI(\"hello-mashiro\"); botui.message.add({ delay: 800, content: \"Hi, there111👋\" }).then(function () { botui.message.add({ delay: 1100, content: \"这里是 Mashiro\" }).then(function () { botui.message.add({ delay: 1100, content: \"一个可爱的蓝孩子~\" }).then(function () { botui.action.button({ delay: 1600, action: [{ text: \"然后呢？ 😃\", value: \"sure\" }, { text: \"少废话！ 🙄\", value: \"skip\" }] }).then(function (a) { \"sure\" == a.value && sure(); \"skip\" == a.value && end() }) }) }) }); var sure = function () { botui.message.add({ delay: 600, content: \"😘\" }).then(function () { secondpart() }) }, end = function () { botui.message.add({ delay: 600, content: \"![...](https://view.moezx.cc/images/2018/05/06/a1c4cd0452528b572af37952489372b6.md.jpg)\" }) }, secondpart = function () { botui.message.add({ delay: 1500, content: \"目前就读于湖南人文科技学院\" }).then(function () { botui.message.add({ delay: 1500, content: \"向往技术也喜欢二次元，但后来喜欢上了经济学…\" }).then(function () { botui.message.add({ delay: 1200, content: \"因为数据分析也需要Coder嘛\" }).then(function () { botui.message.add({ delay: 1500, content: \"主攻 Java 语言，略懂 STATA，偶尔也折腾 HTML/CSS/JavaScript/PHP\" }).then(function () { botui.message.add({ delay: 1500, content: \"研究的方向，是经济/金融方向的数据分析（data science）以及机器学习（machine learning）\" }).then(function () { botui.message.add({ delay: 1800, content: \"喜欢画画，希望有一天能够被称为画师\" }).then(function () { botui.action.button({ delay: 1100, action: [{ text: \"为什么叫Mashiro呢？ 🤔\", value: \"why-mashiro\" }] }).then(function (a) { thirdpart() }) }) }) }) }) }) }) }, thirdpart = function () { botui.message.add({ delay: 1E3, content: \"Mashiro以及站名都来自一部动画，因为和主角有一样的爱好~ 如果有兴趣可以找找首页上的视频~\" }).then(function () { botui.action.button({ delay: 1500, action: [{ text: \"为什么是白猫呢？ 🤔\", value: \"why-cat\" }] }).then(function (a) { fourthpart() }) }) }, fourthpart = function () { botui.message.add({ delay: 1E3, content: \"因为对GitHub有种执念… \" }).then(function () { botui.message.add({ delay: 1100, content: \"而且我真的是猫控！\" }).then(function () { botui.action.button({ delay: 1500, action: [{ text: \"域名有什么含意吗？(ง •_•)ง\", value: \"why-domain\" }] }).then(function (a) { fifthpart() }) }) }) }, fifthpart = function () { botui.message.add({ delay: 1E3, content: \"emmmm，看备案信息你就知道了=.= 本来想要zheng.xin的，但50万真买不起。。\" }).then(function () { botui.message.add({ delay: 1600, content: \"那么，仔细看看我的博客吧？ ^_^\" }) }) } } bot_ui_ini()"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-04-25T07:15:14.520Z","comments":true,"path":"tags/index.html","permalink":"https://codemonsterm.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Integer对象交换问题","slug":"9.3-Integer对象交换","date":"2019-09-03T07:15:22.000Z","updated":"2019-09-06T04:57:27.632Z","comments":true,"path":"2019/09/03/9.3-Integer对象交换/","link":"","permalink":"https://codemonsterm.github.io/2019/09/03/9.3-Integer对象交换/","excerpt":"","text":"##我们先看一段代码： class Main { public static void swap(Integer i, Integer j) { Integer temp = new Integer(i); i = j; j = temp; } public static void main(String[] args) { Integer i = new Integer(10); Integer j = new Integer(20); swap(i, j); System.out.println(“i = “ + i + “, j = “ + j); } }运行结果： i=10 j=20 从运行结果可以看出经过swap()之后i和j的值并没有改变。 ##具体可以了解下Integer的装箱和拆箱。 Integer.valueOf(); public static Integer valueOf(int i) { if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high) return IntegerCache.cache[i + (-IntegerCache.low)]; return new Integer(i); } /** * The value of the {@code Integer}. * * @serial */ private final int value; 从上面的代码就可以看出为什么i和j的值没有改变了，因为它们是final的。 那么如何对final对象进行修改呢？ ##可以用反射，修改swap方法： 如果把temp改为int，i==temp会返回什么结果呢？ 答案：false。 如果在缓存区间，如何让a,b互换呢？ public static void swap(Integer i, Integer j) throws NoSuchFieldException, IllegalAccessException { //利用反射修改private final对象 Field field =Integer.class.getDeclaredField(&quot;value&quot;); field.setAccessible(true); Integer temp =new Integer(i.intValue()); field.set(i,j.intValue()); field.set(j,temp); } public static void main(String[] args) throws NoSuchFieldException, IllegalAccessException { Integer i = new Integer(10); Integer j = new Integer(20); swap(i, j); System.out.println(&quot;i = &quot; + i + &quot;, j = &quot; + j); } 运行结果： i = 20, j = 10 ##总结： 1.Integer装箱和拆箱 2.Integer缓存 3.利用反射修改private final对象","categories":[{"name":"code","slug":"code","permalink":"https://codemonsterm.github.io/categories/code/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://codemonsterm.github.io/tags/Java/"}]},{"title":"我的第一篇博客","slug":"我的第一篇博客","date":"2019-04-21T09:01:11.000Z","updated":"2019-04-25T07:55:22.170Z","comments":true,"path":"2019/04/21/我的第一篇博客/","link":"","permalink":"https://codemonsterm.github.io/2019/04/21/我的第一篇博客/","excerpt":"","text":"Hello Hexo Blog!2019/4/21 17:02:42","categories":[],"tags":[]}]}